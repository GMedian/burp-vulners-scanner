package burp.models;

import com.google.common.collect.Lists;
import org.json.JSONArray;
import org.json.JSONObject;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Vulnerability {

    private String id;
    private String type="";
    private String title="";
    private Double cvssScore=0.0;
    private Double epssScore=0.0;
    private String description="";
    private boolean hasExploit=false;
    private List<String[]> exploits=Lists.newArrayList();

    protected Vulnerability() {
    }

    public Vulnerability(JSONObject vulnersBulletin) {
        this.id = vulnersBulletin.optString("id");
        this.type = vulnersBulletin.optString("type");
        this.title = vulnersBulletin.optString("title");
        this.description = vulnersBulletin.optString("description");

        this.searchForExploits(vulnersBulletin.optJSONObject("dependencies", new JSONObject()).optJSONArray("references", new JSONArray()));

        this.cvssScore = vulnersBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score");
        this.epssScore = vulnersBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("epss", new JSONObject()).optDouble("epss");
    }

    public static Vulnerability fromAuditV4(JSONObject vulnersBulletin){
        Vulnerability vulnerability = new Vulnerability();

        vulnerability.id = vulnersBulletin.optString("id");
        vulnerability.type = vulnersBulletin.optString("type");
        vulnerability.title = vulnersBulletin.optString("title");
        vulnerability.description = vulnersBulletin.optString("description");

        vulnerability.searchForExploits(vulnersBulletin.optJSONObject("enchantments", new JSONObject()).optJSONObject("dependencies", new JSONObject()).optJSONArray("references", new JSONArray()));

        vulnerability.cvssScore = vulnersBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score");
        vulnerability.epssScore = vulnersBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("epss", new JSONObject()).optDouble("epss");

        return vulnerability;
    }

    public static Vulnerability fromWebVulns(JSONObject webVulnBulletin){
        Vulnerability vulnerability = new Vulnerability();

        vulnerability.id = webVulnBulletin.optString("id");
        vulnerability.type = webVulnBulletin.optString("type");
        vulnerability.title = webVulnBulletin.optString("title");
        vulnerability.description = webVulnBulletin.optString("description");

        vulnerability.searchForExploits(webVulnBulletin.optJSONObject("enchantments", new JSONObject()).optJSONObject("dependencies", new JSONObject()).optJSONArray("references", new JSONArray()));

        vulnerability.cvssScore = webVulnBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score");
        vulnerability.epssScore = webVulnBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("epss", new JSONObject()).optDouble("epss");

        return vulnerability;
    }

    private void searchForExploits(JSONArray references){
        Set<String> exploitTypes = new HashSet<String>(Lists.newArrayList("exploitdb", "githubexploit", "metasploit", "packetstorm"));
        boolean hasExploit = false;
        String referenceType, referenceId;
        List<String[]> exploits = Lists.newArrayList();

        for(Object ref: references) {
            referenceType = ((JSONObject) ref).optString("type");
            if (exploitTypes.contains(referenceType)) {
                hasExploit = true;

                for(int id=0; id < ((JSONObject) ref).optJSONArray("idList").length(); id++) {
                    referenceId = ((JSONObject) ref).optJSONArray("idList").getString(id);
                    exploits.add(new String[]{referenceType, referenceId});
                }
            }
        }

        this.hasExploit = hasExploit;
        this.exploits = exploits;
    }

    public String getItemLink() {
        return getItemLink(id);
    }

    public String getItemLink(String value) {
        return String.format("<a href=\"https://vulners.com/%s/%s\" target=\"_blank\">%s</a>", type, id, value);
    }

    public void update(JSONObject vulnersIDBulletin) {
        this.id = vulnersIDBulletin.optString("id", this.id);
        this.type = vulnersIDBulletin.optString("type", this.type);
        this.title = vulnersIDBulletin.optString("title", this.title);
        this.description = vulnersIDBulletin.optString("description", this.description);

        this.cvssScore = vulnersIDBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score", this.cvssScore);
    }

    public String getItemDescription() {
        return description.length() > 256
                ? description.substring(0, 256) + "..."
                : description;
    }

    public String getItemCvssScore() {
        return cvssScore.intValue() > 0 ? String.format("<b color=\"red\">%s<b/>", cvssScore) : "";
    }

    public String getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public double getCvssScore() {
        return cvssScore;
    }

    public Double getEpssScore() {
        return epssScore;
    }

    public String getType() {
        return type;
    }

    public boolean getHasExploit() {
        return hasExploit;
    }

    public String getDescription() {
        return description;
    }

    public List<String[]> getExploits() {
        return exploits;
    }

    public void setCvssScore(Double cvssScore) {
        this.cvssScore = cvssScore;
    }

    public void setHasExploit(boolean hasExploit) {
        this.hasExploit = hasExploit;
    }

    public void setExploits(List<String[]> exploits) {
        this.exploits = exploits;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setEpssScore(Double epssScore) {
        this.epssScore = epssScore;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void setType(String type) {
        this.type = type;
    }

    public void setId(String id) {
        this.id = id;
    }
}
