package burp.models;

import org.json.JSONObject;

public class Vulnerability {

    private String id;
    private String type;
    private String title;
    private Double cvssScore;
    private String description;
    private String bulletinFamily;

    private String exploit = "";
    private String flatDescription = "";

    public Vulnerability(JSONObject vulnersBulletin) {
        this.id = vulnersBulletin.optString("id");
        this.type = vulnersBulletin.optString("type");
        this.title = vulnersBulletin.optString("title");
        this.description = vulnersBulletin.optString("description", vulnersBulletin.optString("short_description"));
        this.bulletinFamily = vulnersBulletin.optString("bulletinFamily");

        if (vulnersBulletin.has("flatDescription")) {
            this.flatDescription = vulnersBulletin.optString("flatDescription");
        }
        if (vulnersBulletin.has("sourceData") && bulletinFamily.equals("exploit")) {
            this.exploit = vulnersBulletin.optString("sourceData");
        }
        this.cvssScore = vulnersBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score");
    }

    public String getBulletinFamily() {
        return bulletinFamily;
    }

    public String getItemLink() {
        return getItemLink(id);
    }

    public String getExploitLink() {
        return "".equals(exploit) ? "" : getItemLink("Exploit");
    }

    public String getItemLink(String value) {
        return String.format("<a href=\"https://vulners.com/%s/%s\" target=\"_blank\">%s</a>", type, id, value);
    }

    public void update(JSONObject vulnersIDBulletin) {
        this.id = vulnersIDBulletin.optString("id", this.id);
        this.type = vulnersIDBulletin.optString("type", this.type);
        this.title = vulnersIDBulletin.optString("title", this.title);
        this.description = vulnersIDBulletin.optString("description", this.description);
        this.bulletinFamily = vulnersIDBulletin.optString("bulletinFamily", this.bulletinFamily);

        if (vulnersIDBulletin.has("flatDescription")) {
            this.flatDescription = vulnersIDBulletin.optString("flatDescription", this.flatDescription);
        }
        if (vulnersIDBulletin.has("sourceData") && bulletinFamily.equals("exploit")) {
            this.exploit = vulnersIDBulletin.optString("sourceData", this.exploit);
        }
        this.cvssScore = vulnersIDBulletin.optJSONObject("metrics", new JSONObject()).optJSONObject("cvss", new JSONObject()).optDouble("score", this.cvssScore);
    }

    public String getItemDescription() {
        return !flatDescription.equals("")
                ? flatDescription
                : description.length() > 256
                ? description.substring(0, 256) + "..."
                : description;
    }

    public String getItemCvssScore() {
        return cvssScore.intValue() > 0 ? String.format("<b color=\"red\">%s<b/>", cvssScore) : "";
    }

    public String getFlatDescription() {
        return flatDescription;
    }

    public String getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public double getCvssScore() {
        return cvssScore;
    }

    public String getType() {
        return type;
    }

    public String getDescription() {
        return description;
    }
}
